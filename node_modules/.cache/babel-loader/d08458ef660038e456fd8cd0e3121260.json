{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\texting-front\\\\src\\\\list.jsx\";\nimport React from 'react';\nimport Message from './message.jsx';\nimport Setup from './setup.jsx';\nimport './index.css';\nimport Send from './send.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      //\tconst response = await fetch('http://puppygifs.tumblr.com/api/read/json/');\n      const response = await fetch('https://nuclei-texting.herokuapp.com/express_backend/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      names: [],\n      texts: []\n    };\n  }\n\n  async componentDidMount() {\n    //\t\tlet b = await this.callBackendAPI();//.then(res => \n    //console.log(b);\n    this.setState({\n      names: ['Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky']\n    }); //.catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }, this), this.state.names.map(e => /*#__PURE__*/_jsxDEV(Message, {\n        name: e,\n        text: \"\",\n        color: \"red\"\n      }, i++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/texting-front/src/list.jsx"],"names":["React","Message","Setup","Send","List","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","names","texts","componentDidMount","setState","componentWillUnmount","render","i","map","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CACA;AACCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SAWAC,cAXA,GAWiB,YACjB;AACA;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EACA;AACC,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACA;;AACD,aAAOJ,IAAP;AACA,KArBD;;AAEC,SAAKK,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAG;AAArB,KAAb;AACA;;AACsB,QAAjBC,iBAAiB,GACvB;AACD;AACE;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,MAAnC,EAA2C,OAA3C,EAAoD,MAApD,EAA4D,OAA5D,EAAqE,MAArE,EAA6E,OAA7E,EAAsF,MAAtF,EAA8F,OAA9F;AAAT,KAAd,EAHD,CAGmI;AAClI,GAXF,CAYI;;;AAaHI,EAAAA,oBAAoB,GAAG,CAAE;;AACzBC,EAAAA,MAAM,GACN;AACC,QAAIC,CAAC,GAAG,CAAR;AACA,wBAAS;AAAA,8BACR,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADQ,EACE,KAAKP,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAsBC,CAAD,iBAAO,QAAC,OAAD;AAAS,QAAA,IAAI,EAAIA,CAAjB;AAAoB,QAAA,IAAI,EAAG,EAA3B;AAA8B,QAAA,KAAK,EAAG;AAAtC,SAAmDF,CAAC,EAApD;AAAA;AAAA;AAAA;AAAA,cAA5B,CADF,eAER,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAIA;;AAjCF;;AAoCA,eAAenB,IAAf","sourcesContent":["import React from 'react';\r\nimport Message from './message.jsx';\r\nimport Setup from './setup.jsx';\r\nimport './index.css';\r\nimport Send from './send.jsx';\r\nclass List extends React.Component \r\n{\r\n\tconstructor(props) \r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = { names: [], texts : [] };\r\n\t}\r\n\tasync componentDidMount() \r\n\t{\r\n//\t\tlet b = await this.callBackendAPI();//.then(res => \r\n\t\t//console.log(b);\r\n\t\tthis.setState({ names: ['Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky', 'Tofu', 'Vicky' ] });//.catch(err => console.log(err));\r\n\t}\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n\tcallBackendAPI = async () => \r\n\t{\r\n\t//\tconst response = await fetch('http://puppygifs.tumblr.com/api/read/json/');\r\n\t\tconst response = await fetch('https://nuclei-texting.herokuapp.com/express_backend/');\r\n\t\tconst body = await response.json();\r\n\t\tif (response.status !== 200) \r\n\t\t{\r\n\t\t\tthrow Error(body.message) \r\n\t\t}\r\n\t\treturn body;\r\n\t};\r\n\r\n\tcomponentWillUnmount() {}\r\n\trender() \r\n\t{\r\n\t\tlet i = 0;\t\r\n\t\treturn ( <div>\r\n\t\t\t<Setup />{this.state.names.map((e) => <Message name = {e} text = \"\" color = \"red\" key = {i++} />)}\r\n\t\t\t<Send />\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}