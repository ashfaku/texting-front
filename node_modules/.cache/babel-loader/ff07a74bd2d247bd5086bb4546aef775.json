{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\hold\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { Helmet } from \"react-helmet\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends React.Component {\n  render() {\n    console.log(this.props.color);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `name ${this.props.color}`,\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: this.props.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Setup extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://fonts.googleapis.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://fonts.gstatic.com\",\n          crossorigin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Send extends React.Component {\n  async send() {\n    const docData = {\n      stringExample: document.getElementById(\"input\").text\n    };\n    var elements = document.getElementsByClassName(\"name\");\n    console.log(elements);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"send\",\n        onClick: this.send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5000/express_backend/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      names: [],\n      texts: []\n    };\n  }\n\n  async componentDidMount() {\n    let b = await this.callBackendAPI(); //.then(res => \n\n    console.log(b);\n    this.setState({\n      names: b.names\n    }); //.catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), this.state.names.map(e => /*#__PURE__*/_jsxDEV(Message, {\n        name: e.name,\n        text: e.msg,\n        color: e.color\n      }, i++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 47\n      }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this); //\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    //\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    //\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\">\n    //</div>);\n  }\n\n}\n\nconst container = document.getElementById('root'); // Create a root.\n\nconst root = ReactDOMClient.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 13\n}, this));","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/hold/client/src/index.js"],"names":["React","ReactDOMClient","Helmet","Message","Component","render","console","log","props","color","name","text","Setup","Send","send","docData","stringExample","document","getElementById","elements","getElementsByClassName","List","constructor","callBackendAPI","response","fetch","body","json","status","Error","message","state","names","texts","componentDidMount","b","setState","componentWillUnmount","i","map","e","msg","container","root","createRoot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport {Helmet} from \"react-helmet\";\nimport './index.css';\nclass Message extends React.Component\n{\n\trender()\n\t{\n\t\tconsole.log(this.props.color);\n\t\treturn <div className = \"message\">\n\t\t\t<div className = \"header\">\n\t\t\t\t<span className = {`name ${this.props.color}`}>{this.props.name}</span>\t\t\n\t\t\t\t<span className = \"date\">{this.props.color}</span>\n\t\t\t</div>\n\t\t\t<div className = \"text\">{this.props.text}</div>\n\t\t</div>\n\t}\n}\nclass Setup extends React.Component\n{\n\trender()\n\t{\n\t\treturn <div> \n\t\t\t<Helmet>\n\t\t\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n\t\t\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin / >\n\t\t\t\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\" />\n\t\t\t</Helmet>\n\t\t</div>\n\t}\n\n}\nclass Send extends React.Component\n{\n\tasync send()\n\t{\n\t\tconst docData = \n\t\t{\n\t\t\tstringExample: document.getElementById(\"input\").text,\n\t\t};\n\t\tvar elements = document.getElementsByClassName(\"name\");\n\t\tconsole.log(elements);\n\t}\n\trender()\n\t{\n\t\treturn <div>\n\t\t<input type = \"text\" id = \"input\"></input>\n\t\t<button id = \"send\" onClick={this.send}>Send</button>\n\t\t</div>\n\t}\n\n}\nclass List extends React.Component \n{\n\tconstructor(props) \n\t{\n\t\tsuper(props);\n\t\tthis.state = { names: [], texts : [] };\n\t}\n\tasync componentDidMount() \n\t{\n\t\tlet b = await this.callBackendAPI();//.then(res => \n\t\tconsole.log(b);\n\t\tthis.setState({ names: b.names });//.catch(err => console.log(err));\n\t}\n    // fetching the GET route from the Express server which matches the GET route from server.js\n\tcallBackendAPI = async () => \n\t{\n\t\tconst response = await fetch('http://localhost:5000/express_backend/');\n\t\tconst body = await response.json();\n\t\tif (response.status !== 200) \n\t\t{\n\t\t\tthrow Error(body.message) \n\t\t}\n\t\treturn body;\n\t};\n\n\tcomponentWillUnmount() {}\n\trender() \n\t{\n\t\tlet i = 0;\t\n\t\treturn (\n\t\t\t<div><Setup />{this.state.names.map((e) => <Message name = {e.name} text = {e.msg} color = {e.color} key = {i++} />)}\n\t\t\t\n\t\t\t<Send />\n\t\t</div>);\n\t\t//\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t//\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t//\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\">\n\t\t//</div>);\n\n\t}\n}\nconst container = document.getElementById('root');\n\n// Create a root.\nconst root = ReactDOMClient.createRoot(container);\nroot.render(<List />);"]},"metadata":{},"sourceType":"module"}