{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\texting-front\\\\src\\\\list.jsx\";\nimport React from 'react';\nimport Message from './message.jsx';\nimport Setup from './setup.jsx';\nimport './index.css';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Send from './send.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket(\"ws://localhost:5000\"); //'ws://app.netlify.com/sites/thunderous-bavarois-da9e5c');\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      //\tconst response = await fetch('http://puppygifs.tumblr.com/api/read/json/');\n      const response = await fetch('https://nuclei-texting.herokuapp.com/express_backend/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.username);\n\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.send(JSON.stringify({\n      \"type\": \"texting\",\n      \"name\": \"ripple\"\n    }));\n\n    client.onmessage = message => {\n      this.setState({\n        list: JSON.parse(message.data)\n      });\n      console.log(this.state);\n    };\n\n    this.setState({});\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), this.state.list.map(e => /*#__PURE__*/_jsxDEV(Message, {\n          info: e\n        }, i++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Send, {\n        client: client,\n        username: this.props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/texting-front/src/list.jsx"],"names":["React","Message","Setup","w3cwebsocket","W3CWebSocket","Send","client","List","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","list","componentDidMount","console","log","username","onopen","send","JSON","stringify","onmessage","setState","parse","data","componentWillUnmount","render","i","map","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB,qBAAjB,CAAf,C,CAAuD;;AAEvD,MAAMG,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CACA;AACCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SAsBAC,cAtBA,GAsBiB,YAAY;AAC7B;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EACA;AACC,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACA;;AACD,aAAOJ,IAAP;AACA,KA/BD;;AAEC,SAAKK,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAG;AAAR,KAAb;AACA;;AACsB,QAAjBC,iBAAiB,GACvB;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWc,QAAvB;;AACAlB,IAAAA,MAAM,CAACmB,MAAP,GAAgB,MAAM;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,KAFD;;AAGAjB,IAAAA,MAAM,CAACoB,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AAC1B,cAAS,SADiB;AAE1B,cAAS;AAFiB,KAAf,CAAZ;;AAIAtB,IAAAA,MAAM,CAACuB,SAAP,GAAoBX,OAAD,IACnB;AACC,WAAKY,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAEO,IAAI,CAACI,KAAL,CAAWb,OAAO,CAACc,IAAnB;AAAP,OAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,KAJD;;AAKA,SAAKW,QAAL,CAAc,EAAd;AACA,GAtBF,CAuBI;;;AAYHG,EAAAA,oBAAoB,GAAG,CAAE;;AACzBC,EAAAA,MAAM,GACN;AACC,QAAIC,CAAC,GAAG,CAAR;AACA,wBACE;AAAA,8BACA;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,gCACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADD,EACW,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAqBC,CAAD,iBAAO,QAAC,OAAD;AAAS,UAAA,IAAI,EAAIA;AAAjB,WAA2BF,CAAC,EAA5B;AAAA;AAAA;AAAA;AAAA,gBAA3B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,IAAD;AAAM,QAAA,MAAM,EAAI7B,MAAhB;AAAwB,QAAA,QAAQ,EAAI,KAAKI,KAAL,CAAWc;AAA/C;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQA;;AA/CF;;AAkDA,eAAejB,IAAf","sourcesContent":["import React from 'react';\r\nimport Message from './message.jsx';\r\nimport Setup from './setup.jsx';\r\nimport './index.css';\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport Send from './send.jsx';\r\n\r\nconst client = new W3CWebSocket(\"ws://localhost:5000\");//'ws://app.netlify.com/sites/thunderous-bavarois-da9e5c');\r\n\r\nclass List extends React.Component \r\n{\r\n\tconstructor(props) \r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {list : []};\r\n\t}\r\n\tasync componentDidMount() \r\n\t{\r\n\t\tconsole.log(this.props.username);\r\n\t\tclient.onopen = () => {\r\n\t\t\tconsole.log('WebSocket Client Connected');\r\n\t\t};\r\n\t\tclient.send(JSON.stringify({\r\n\t\t\t\"type\" : \"texting\",\r\n\t\t\t\"name\" : \"ripple\"\r\n\t\t}));\r\n\t\tclient.onmessage = (message) =>\r\n\t\t{\r\n\t\t\tthis.setState({list: JSON.parse(message.data)});\r\n\t\t\tconsole.log(this.state);\r\n\t\t};\r\n\t\tthis.setState({});\r\n\t}\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n\tcallBackendAPI = async () => {\r\n\t//\tconst response = await fetch('http://puppygifs.tumblr.com/api/read/json/');\r\n\t\tconst response = await fetch('https://nuclei-texting.herokuapp.com/express_backend/');\r\n\t\tconst body = await response.json();\r\n\t\tif (response.status !== 200) \r\n\t\t{\r\n\t\t\tthrow Error(body.message) \r\n\t\t}\r\n\t\treturn body;\r\n\t};\r\n\r\n\tcomponentWillUnmount() {}\r\n\trender() \r\n\t{\r\n\t\tlet i = 0;\t\r\n\t\treturn ( \r\n\t\t\t\t<div>\r\n\t\t\t\t<div className = \"list\">\r\n\t\t\t\t\t<Setup />{this.state.list.map((e) => <Message info = {e} key = {i++} />)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Send client = {client} username = {this.props.username} />\r\n\t\t\r\n\t\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}