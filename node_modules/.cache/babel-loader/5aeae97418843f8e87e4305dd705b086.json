{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\hold\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Send extends React.Component {\n  async send() {\n    const docData = {\n      stringExample: document.getElementById(\"input\").text\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"send\",\n        onClick: this.send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      msgs: [\"poop\", \"idk\", \"peepee\"],\n      m: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI().then(res => this.setState({\n      m: res.express\n    })).catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.msgs.map(e => /*#__PURE__*/_jsxDEV(Message, {\n        value: this.state.m\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/hold/client/src/index.js"],"names":["React","ReactDOM","Message","Component","render","props","value","Send","send","docData","stringExample","document","getElementById","text","List","constructor","callBackendAPI","response","fetch","body","json","status","Error","message","state","msgs","m","componentDidMount","then","res","setState","express","catch","err","console","log","componentWillUnmount","map","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AACA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CACA;AACCC,EAAAA,MAAM,GACN;AACC,wBAAO;AAAA,gBAAM,KAAKC,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAJF;;AAOA,MAAMC,IAAN,SAAmBP,KAAK,CAACG,SAAzB,CACA;AACW,QAAJK,IAAI,GACV;AACC,UAAMC,OAAO,GACb;AACCC,MAAAA,aAAa,EAAEC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC;AADjD,KADA;AAIA;;AACDT,EAAAA,MAAM,GACN;AACC,wBAAO;AAAA,8BACP;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,EAAE,EAAG;AAA1B;AAAA;AAAA;AAAA;AAAA,cADO,eAEP;AAAQ,QAAA,EAAE,EAAG,MAAb;AAAoB,QAAA,OAAO,EAAE,KAAKI,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIA;;AAdF;;AAiBA,MAAMM,IAAN,SAAmBd,KAAK,CAACG,SAAzB,CACA;AACCY,EAAAA,WAAW,CAACV,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SASAW,cATA,GASiB,YACjB;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EACA;AACC,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACA;;AACD,aAAOJ,IAAP;AACA,KAnBD;;AAEC,SAAKK,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,CAAR;AAAmCC,MAAAA,CAAC,EAAG;AAAvC,KAAb;AACA;;AACDC,EAAAA,iBAAiB,GACjB;AACC,SAAKX,cAAL,GAAsBY,IAAtB,CAA2BC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,CAAC,EAAEG,GAAG,CAACE;AAAT,KAAd,CAAlC,EAAqEC,KAArE,CAA2EC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAlF;AACA,GATF,CAUI;;;AAaHG,EAAAA,oBAAoB,GAAG,CAAE;;AACzBhC,EAAAA,MAAM,GACN;AACC,wBAAO;AAAA,iBAAM,KAAKoB,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAqBC,CAAD,iBAAO,QAAC,OAAD;AAAS,QAAA,KAAK,EAAI,KAAKd,KAAL,CAAWE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAA3B,CAAN,eACP,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAKA;;AA/BF;;AAiCAzB,QAAQ,CAACG,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nclass Message extends React.Component\n{\n\trender()\n\t{\n\t\treturn <div>{this.props.value}</div>\n\t}\n}\n\nclass Send extends React.Component\n{\n\tasync send()\n\t{\n\t\tconst docData = \n\t\t{\n\t\t\tstringExample: document.getElementById(\"input\").text,\n\t\t};\n\t}\n\trender()\n\t{\n\t\treturn <div>\n\t\t<input type = \"text\" id = \"input\"></input>\n\t\t<button id = \"send\" onClick={this.send}>Send</button>\n\t\t</div>\n\t}\n\n}\nclass List extends React.Component \n{\n\tconstructor(props) \n\t{\n\t\tsuper(props);\n\t\tthis.state = { msgs: [\"poop\" ,\"idk\", \"peepee\"], m : \"\" };\n\t}\n\tcomponentDidMount() \n\t{\n\t\tthis.callBackendAPI().then(res => this.setState({ m: res.express })).catch(err => console.log(err));\n\t}\n    // fetching the GET route from the Express server which matches the GET route from server.js\n\tcallBackendAPI = async () => \n\t{\n\t\tconst response = await fetch('/express_backend');\n\t\tconst body = await response.json();\n\n\t\tif (response.status !== 200) \n\t\t{\n\t\t\tthrow Error(body.message) \n\t\t}\n\t\treturn body;\n\t};\n\n\tcomponentWillUnmount() {}\n\trender() \n\t{\n\t\treturn <div>{this.state.msgs.map((e) => <Message value = {this.state.m} />)}\n\t\t<Send />\n\n\t\t</div>;\n\n\t}\n}\nReactDOM.render(<List />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}