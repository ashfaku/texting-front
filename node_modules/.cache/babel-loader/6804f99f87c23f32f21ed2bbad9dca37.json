{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\texting-front\\\\src\\\\creation.jsx\";\nimport React from 'react';\nimport './login.css';\nimport Layout from './layout.jsx';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport logo from './logo1.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('ws://localhost:5000');\n\nclass Creation extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5000/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleSubmit = async event => {\n      let info = this.getInfo();\n      fetch('http://localhost:5000/express_backend', {\n        method: 'POST',\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(info),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let res = await this.callBackendAPI();\n      console.log(res); //this.props.root.render(<Layout name = {info.username} />);\n\n      event.preventDefault();\n    };\n  }\n\n  getInfo() {\n    var u = document.getElementById('uN');\n    var p = document.getElementById('pN');\n    var e = document.getElementById('e');\n    var info = {\n      \"username\": u.value,\n      \"password\": p.value,\n      \"email\": e.value\n    };\n    return info;\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      console.log(message);\n    };\n\n    const username = \"ripple\"; //if (username.trim()) {\n\n    /*const data = {\r\n    \tusername\r\n    };*/\n\n    this.setState({\n      \"name\": \"ripple\"\n    }, () => {\n      client.send(JSON.stringify({\n        \"name\": \"ripple\",\n        type: \"userevent\"\n      }));\n    }); //\t}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBg\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: \"Nuclei\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"e\",\n          placeholder: \"Email...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"uN\",\n          placeholder: \"Username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pN\",\n          placeholder: \"Password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"createAccount\",\n        onClick: this.handleSubmit,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Creation;","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/texting-front/src/creation.jsx"],"names":["React","Layout","w3cwebsocket","W3CWebSocket","logo","client","Creation","Component","callBackendAPI","response","fetch","body","json","status","Error","message","handleSubmit","event","info","getInfo","method","JSON","stringify","headers","res","console","log","preventDefault","u","document","getElementById","p","e","value","componentDidMount","onopen","onmessage","username","setState","send","type","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './login.css';\r\nimport Layout from './layout.jsx';\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport logo from './logo1.svg';\r\n\r\nconst client = new W3CWebSocket('ws://localhost:5000');\r\nclass Creation extends React.Component\r\n{\r\n\tgetInfo()\r\n\t{\t\t\r\n\t\tvar u = document.getElementById('uN');\r\n\t\tvar p = document.getElementById('pN');\r\n\t\tvar e = document.getElementById('e');\r\n\t\tvar info = \r\n\t\t{\r\n\t\t\t\"username\" : u.value,\r\n\t\t\t\"password\" : p.value,\r\n\t\t\t\"email\" : e.value\r\n\t\t};\r\n\t\treturn info;\r\n\t}\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tclient.onopen = () => {\r\n\t\t\tconsole.log('WebSocket Client Connected');\r\n\t\t};\r\n\t\tclient.onmessage = (message) => {\r\n\t\t\tconsole.log(message);\r\n\t\t};\r\n\t\tconst username = \"ripple\";\r\n\t\t//if (username.trim()) {\r\n\t\t\t/*const data = {\r\n\t\t\t\tusername\r\n\t\t\t};*/\r\n\t\t\tthis.setState({\r\n\t\t\t\t\"name\" : \"ripple\"\r\n\t\t\t}, () => {\r\n\t\t\t\tclient.send(JSON.stringify({\r\n\t\t\t\t\t\"name\" : \"ripple\",\r\n\t\t\t\t\ttype: \"userevent\"\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t//\t}\r\n\t}\r\n\tcallBackendAPI = async () => \r\n\t{\r\n\t\tconst response = await fetch('http://localhost:5000/express_backend');\r\n\t\tconst body = await response.json();\r\n\t\tif (response.status !== 200) \r\n\t\t{\r\n\t\t\tthrow Error(body.message) \r\n\t\t}\r\n\t\treturn body;\r\n\t};\r\n\thandleSubmit = async (event) =>\r\n\t{\r\n\t\tlet info = this.getInfo();\r\n\t    fetch('http://localhost:5000/express_backend', \r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\t// We convert the React state to JSON and send it as the POST body\r\n\t\t\tbody: JSON.stringify(info),\r\n\t\t\theaders: \r\n\t\t\t{\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet res = await this.callBackendAPI();\r\n\t\tconsole.log(res); \r\n\t\t//this.props.root.render(<Layout name = {info.username} />);\r\n\t\tevent.preventDefault();\r\n\t}\r\n\trender()\r\n\t{\r\n\t\treturn <div className = \"loginBg\">\r\n\t\t        <img src={logo} className = \"App-logo\" alt = \"logo\" />\r\n\t\t\t\t<div id = \"title\">Nuclei</div>\r\n\t\t\t\t<div id = \"login\"> \r\n\t\t\t\t\t<input type = \"text\" id = \"e\" placeholder = \"Email...\"></input>\r\n\t\t\t\t\t<input type = \"text\" id = \"uN\" placeholder = \"Username...\"></input>\r\n\t\t\t\t\t<input type = \"text\" id = \"pN\" placeholder = \"Password...\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button id = \"createAccount\" onClick = {this.handleSubmit}>Create</button>\r\n\t\t\t</div>\r\n\t}\r\n}\r\n\r\nexport default Creation;"]},"metadata":{},"sourceType":"module"}