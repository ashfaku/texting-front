{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\hold\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: this.props.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: \"Today at 10:03 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Send extends React.Component {\n  async send() {\n    const docData = {\n      stringExample: document.getElementById(\"input\").text\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"send\",\n        onClick: this.send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5000/express_backend/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      names: [],\n      texts: []\n    };\n  }\n\n  async componentDidMount() {\n    let b = await this.callBackendAPI(); //.then(res => \n\n    this.setState({\n      names: b.names,\n      texts: b.texts\n    }); //.catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.names.map(e => /*#__PURE__*/_jsxDEV(Message, {\n        value: e,\n        text: this.state.texts[i]\n      }, i++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this); //\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    //\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    //\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\">\n    //</div>);\n  }\n\n}\n\nconst container = document.getElementById('root'); // Create a root.\n\nconst root = ReactDOMClient.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 13\n}, this));","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/hold/client/src/index.js"],"names":["React","ReactDOMClient","Message","Component","render","props","value","text","Send","send","docData","stringExample","document","getElementById","List","constructor","callBackendAPI","response","fetch","body","json","status","Error","message","state","names","texts","componentDidMount","b","setState","componentWillUnmount","i","map","e","container","root","createRoot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './index.css';\nclass Message extends React.Component\n{\n\trender()\n\t{\n\t\treturn <div>\n\t\t\t<div className = \"header\">\n\t\t\t\t<span className = \"name\">{this.props.value}</span><span className = \"date\">Today at 10:03 AM</span>\n\t\t\t</div>\n\t\t\t<div className = \"text\">{this.props.text}</div>\n\t\t</div>\n\t}\n}\n\nclass Send extends React.Component\n{\n\tasync send()\n\t{\n\t\tconst docData = \n\t\t{\n\t\t\tstringExample: document.getElementById(\"input\").text,\n\t\t};\n\t}\n\trender()\n\t{\n\t\treturn <div>\n\t\t<input type = \"text\" id = \"input\"></input>\n\t\t<button id = \"send\" onClick={this.send}>Send</button>\n\t\t</div>\n\t}\n\n}\nclass List extends React.Component \n{\n\tconstructor(props) \n\t{\n\t\tsuper(props);\n\t\tthis.state = { names: [], texts : [] };\n\t}\n\tasync componentDidMount() \n\t{\n\t\tlet b = await this.callBackendAPI();//.then(res => \n\t\t\n\t\tthis.setState({ names: b.names, texts : b.texts  });//.catch(err => console.log(err));\n\t}\n    // fetching the GET route from the Express server which matches the GET route from server.js\n\tcallBackendAPI = async () => \n\t{\n\t\tconst response = await fetch('http://localhost:5000/express_backend/');\n\t\tconst body = await response.json();\n\t\tif (response.status !== 200) \n\t\t{\n\t\t\tthrow Error(body.message) \n\t\t}\n\t\treturn body;\n\t};\n\n\tcomponentWillUnmount() {}\n\trender() \n\t{\n\t\tlet i = 0;\t\n\t\treturn (<div>{this.state.names.map((e) => <Message value = {e} text = {this.state.texts[i]} key = {i++} />)}\n\t\t\t\n\t\t\t<Send />\n\t\t</div>);\n\t\t//\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n\t\t//\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n\t\t//\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\">\n\t\t//</div>);\n\n\t}\n}\nconst container = document.getElementById('root');\n\n// Create a root.\nconst root = ReactDOMClient.createRoot(container);\nroot.render(<List />);"]},"metadata":{},"sourceType":"module"}