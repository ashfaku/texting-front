{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iman\\\\Desktop\\\\Ashfak\\\\hold\\\\client2\\\\src\\\\index.js\";\nimport React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { Helmet } from \"react-helmet\";\nimport './index.css';\nimport Message from './message.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Setup extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://fonts.googleapis.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://fonts.gstatic.com\",\n          crossorigin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Send extends React.Component {\n  async send() {\n    const docData = {\n      stringExample: document.getElementById(\"input\").text\n    };\n    var elements = document.getElementsByClassName(\"name\");\n    console.log(elements);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"send\",\n        onClick: this.send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5000/express_backend/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      names: [],\n      texts: []\n    };\n  }\n\n  async componentDidMount() {\n    let b = await this.callBackendAPI(); //.then(res => \n\n    console.log(b);\n    this.setState({\n      names: b.names\n    }); //.catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  componentWillUnmount() {}\n\n  render() {\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), this.state.names.map(e => /*#__PURE__*/_jsxDEV(Message, {\n        name: e.name,\n        text: e.msg,\n        color: e.color\n      }, i++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 47\n      }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst container = document.getElementById('root'); // Create a root.\n\nconst root = ReactDOMClient.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 13\n}, this));","map":{"version":3,"sources":["C:/Users/Iman/Desktop/Ashfak/hold/client2/src/index.js"],"names":["React","ReactDOMClient","Helmet","Message","Setup","Component","render","Send","send","docData","stringExample","document","getElementById","text","elements","getElementsByClassName","console","log","List","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","names","texts","componentDidMount","b","setState","componentWillUnmount","i","map","e","name","msg","color","container","root","createRoot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport {Helmet} from \"react-helmet\";\nimport './index.css';\nimport Message from './message.jsx';\nclass Setup extends React.Component\n{\n\trender()\n\t{\n\t\treturn <div> \n\t\t\t<Helmet>\n\t\t\t\t<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n\t\t\t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin / >\n\t\t\t\t<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\" />\n\t\t\t</Helmet>\n\t\t</div>\n\t}\n\n}\nclass Send extends React.Component\n{\n\tasync send()\n\t{\n\t\tconst docData = \n\t\t{\n\t\t\tstringExample: document.getElementById(\"input\").text,\n\t\t};\n\t\tvar elements = document.getElementsByClassName(\"name\");\n\t\tconsole.log(elements);\n\t}\n\trender()\n\t{\n\t\treturn <div>\n\t\t<input type = \"text\" id = \"input\"></input>\n\t\t<button id = \"send\" onClick={this.send}>Send</button>\n\t\t</div>\n\t}\n\n}\nclass List extends React.Component \n{\n\tconstructor(props) \n\t{\n\t\tsuper(props);\n\t\tthis.state = { names: [], texts : [] };\n\t}\n\tasync componentDidMount() \n\t{\n\t\tlet b = await this.callBackendAPI();//.then(res => \n\t\tconsole.log(b);\n\t\tthis.setState({ names: b.names });//.catch(err => console.log(err));\n\t}\n    // fetching the GET route from the Express server which matches the GET route from server.js\n\tcallBackendAPI = async () => \n\t{\n\t\tconst response = await fetch('http://localhost:5000/express_backend/');\n\t\tconst body = await response.json();\n\t\tif (response.status !== 200) \n\t\t{\n\t\t\tthrow Error(body.message) \n\t\t}\n\t\treturn body;\n\t};\n\n\tcomponentWillUnmount() {}\n\trender() \n\t{\n\t\tlet i = 0;\t\n\t\treturn (\n\t\t\t<div><Setup />{this.state.names.map((e) => <Message name = {e.name} text = {e.msg} color = {e.color} key = {i++} />)}\n\t\t\t\n\t\t\t<Send />\n\t\t</div>);\n\t}\n}\nconst container = document.getElementById('root');\n\n// Create a root.\nconst root = ReactDOMClient.createRoot(container);\nroot.render(<List />);"]},"metadata":{},"sourceType":"module"}